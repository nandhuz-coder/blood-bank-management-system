{"version":3,"file":"static/js/203.337f808e.chunk.js","mappings":"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","sources":["components/shared/Form/Form.js","services/authServices.js","components/shared/Spinner.js","pages/auth/login.js","components/shared/Form/InputType.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport InputType from \"./InputType\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { handleLogin, handleRegister } from \"../../../services/authServices\";\r\n\r\nconst Form = ({ formType, submitBtn, formTitle }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"donor\");\r\n  const [name, setName] = useState(\"\");\r\n  const [organisationName, setOrganisationName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [hospitalName, setHospitalName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          if (formType === \"login\") return handleLogin(e, email, password, role);\r\n          else if (formType === \"register\")\r\n            return handleRegister(\r\n              e,\r\n              name,\r\n              role,\r\n              email,\r\n              password,\r\n              organisationName,\r\n              hospitalName,\r\n              address,\r\n              website,\r\n              phone\r\n            );\r\n        }}\r\n      >\r\n        <h1 className=\"text-center\">{formTitle}</h1>\r\n        <hr />\r\n\r\n        <div className=\"d-flex mb-3\">\r\n          <div className=\"form-check ms-2\">\r\n            <input\r\n              type=\"radio\"\r\n              className=\"form-check-input\"\r\n              name=\"role\"\r\n              id=\"donorRadio\"\r\n              value={\"donor\"}\r\n              onChange={(r) => {\r\n                setRole(r.target.value);\r\n              }}\r\n              defaultChecked\r\n            ></input>\r\n            <label htmlFor=\"donorRadio\" className=\"form-check-label\">\r\n              Donor\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check ms-2\">\r\n            <input\r\n              type=\"radio\"\r\n              className=\"form-check-input\"\r\n              name=\"role\"\r\n              id=\"adminRadio\"\r\n              value={\"admin\"}\r\n              onChange={(r) => {\r\n                setRole(r.target.value);\r\n              }}\r\n            ></input>\r\n            <label htmlFor=\"adminRadio\" className=\"form-check-label\">\r\n              Admin\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check ms-2\">\r\n            <input\r\n              type=\"radio\"\r\n              className=\"form-check-input\"\r\n              name=\"role\"\r\n              id=\"organisationRadio\"\r\n              value={\"organisation\"}\r\n              onChange={(r) => {\r\n                setRole(r.target.value);\r\n              }}\r\n            ></input>\r\n            <label htmlFor=\"organisationRadio\" className=\"form-check-label\">\r\n              Organisation\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check ms-2\">\r\n            <input\r\n              type=\"radio\"\r\n              className=\"form-check-input\"\r\n              name=\"role\"\r\n              id=\"hospitalRadio\"\r\n              value={\"hospital\"}\r\n              onChange={(r) => {\r\n                setRole(r.target.value);\r\n              }}\r\n            ></input>\r\n            <label htmlFor=\"hospitalRadio\" className=\"form-check-label\">\r\n              Hospital\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {/* Switch Statement */}\r\n\r\n        {(() => {\r\n          //eslint-disable-next-line\r\n          switch (true) {\r\n            case formType === \"login\": {\r\n              return (\r\n                <>\r\n                  <InputType\r\n                    labelfor={\"forEmail\"}\r\n                    labelText={\"Email\"}\r\n                    inputType={\"email\"}\r\n                    name={\"email\"}\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                    }}\r\n                  />\r\n                  <InputType\r\n                    labelfor={\"forPassword\"}\r\n                    labelText={\"Password\"}\r\n                    inputType={\"password\"}\r\n                    name={\"password\"}\r\n                    value={password}\r\n                    onChange={(p) => {\r\n                      setPassword(p.target.value);\r\n                    }}\r\n                  />\r\n                </>\r\n              );\r\n            }\r\n            case formType === \"register\": {\r\n              return (\r\n                <>\r\n                  {(role === \"admin\" || role === \"donor\") && (\r\n                    <InputType\r\n                      labelfor={\"forName\"}\r\n                      labelText={\"Name\"}\r\n                      inputType={\"text\"}\r\n                      name={\"name\"}\r\n                      value={name}\r\n                      onChange={(n) => {\r\n                        setName(n.target.value);\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {role === \"organisation\" && (\r\n                    <InputType\r\n                      labelfor={\"forOrganisationName\"}\r\n                      labelText={\"Organisation Name\"}\r\n                      inputType={\"text\"}\r\n                      name={\"organisationName\"}\r\n                      value={organisationName}\r\n                      onChange={(o) => {\r\n                        setOrganisationName(o.target.value);\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {role === \"hospital\" && (\r\n                    <InputType\r\n                      labelfor={\"forHospitalName\"}\r\n                      labelText={\"Hospital Name\"}\r\n                      inputType={\"text\"}\r\n                      name={\"hospitalName\"}\r\n                      value={hospitalName}\r\n                      onChange={(h) => {\r\n                        setHospitalName(h.target.value);\r\n                      }}\r\n                    />\r\n                  )}\r\n                  <InputType\r\n                    labelfor={\"forEmail\"}\r\n                    labelText={\"Email\"}\r\n                    inputType={\"email\"}\r\n                    name={\"email\"}\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                    }}\r\n                  />\r\n                  <InputType\r\n                    labelfor={\"forPassword\"}\r\n                    labelText={\"Password\"}\r\n                    inputType={\"password\"}\r\n                    name={\"password\"}\r\n                    value={password}\r\n                    onChange={(p) => {\r\n                      setPassword(p.target.value);\r\n                    }}\r\n                  />\r\n                  <InputType\r\n                    labelfor={\"forAddress\"}\r\n                    labelText={\"Address\"}\r\n                    inputType={\"text\"}\r\n                    name={\"address\"}\r\n                    value={address}\r\n                    onChange={(a) => {\r\n                      setAddress(a.target.value);\r\n                    }}\r\n                  />\r\n                  <InputType\r\n                    labelfor={\"forPhone\"}\r\n                    labelText={\"Phone\"}\r\n                    inputType={\"text\"}\r\n                    name={\"phone\"}\r\n                    value={phone}\r\n                    onChange={(p) => {\r\n                      setPhone(p.target.value);\r\n                    }}\r\n                  />\r\n\r\n                  <InputType\r\n                    labelfor={\"forWebsite\"}\r\n                    labelText={\"Website\"}\r\n                    inputType={\"text\"}\r\n                    name={\"website\"}\r\n                    value={website}\r\n                    onChange={(w) => {\r\n                      setWebsite(w.target.value);\r\n                    }}\r\n                  />\r\n                </>\r\n              );\r\n            }\r\n          }\r\n        })()}\r\n\r\n        <div className=\"d-flex flex-row justify-content-between\">\r\n          {formType === \"login\" ? (\r\n            <p>\r\n              Not Registered yet? Register\r\n              <Link to={\"/register\"}> Here!</Link>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Already user ?<Link to={\"/login\"}> Login Please!</Link>\r\n            </p>\r\n          )}\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            {submitBtn}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { userLogin, userRegister } from \"../redux/features/auth/authActions\";\r\nimport store from \"../redux/store\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst handleLogin = (e, email, password, role) => {\r\n    e.preventDefault();\r\n    try {\r\n        if (!role || !email || !password)\r\n            return toast.error(\"Please Provide all Fields\");\r\n        store.dispatch(userLogin({ email, password, role }));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nconst handleRegister = (e,\r\n    name,\r\n    role,\r\n    email,\r\n    password,\r\n    organisationName,\r\n    hospitalName,\r\n    address,\r\n    website,\r\n    phone) => {\r\n    e.preventDefault();\r\n    try {\r\n        store.dispatch(userRegister({\r\n            name,\r\n            role,\r\n            email,\r\n            password,\r\n            organisationName,\r\n            hospitalName,\r\n            address,\r\n            website,\r\n            phone\r\n        })\r\n        );\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport { handleLogin, handleRegister };","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className='loader-container'>\r\n      <div className='loader'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport Form from \"../../components/shared/Form/Form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Spinner from \"../../components/shared/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Login = () => {\r\n  const { loading, error } = useSelector(state => state.auth);\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"row g-0\">\r\n          <div className=\"col-md-8 form-banner\">\r\n            <img src=\"./assets/images/banner1.jpg\" alt=\"login \" />\r\n          </div>\r\n          <div className=\"col-md-4 form-container\">\r\n            <Form formTitle={\"Login Page\"} submitBtn={\"Login\"} formType={\"login\"} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst InputType = ({\r\n  labelfor,\r\n  labelText,\r\n  value,\r\n  onChange,\r\n  name,\r\n  inputType,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"mb-1\">\r\n        <label htmlFor={labelfor} className=\"form-label\">\r\n          {labelText}\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          type={inputType}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputType;\r\n"],"names":["_ref","formType","submitBtn","formTitle","email","setEmail","useState","password","setPassword","role","setRole","name","setName","organisationName","setOrganisationName","address","setAddress","hospitalName","setHospitalName","phone","setPhone","website","setWebsite","_jsx","children","_jsxs","onSubmit","e","handleLogin","preventDefault","toast","error","store","dispatch","userLogin","console","log","handleRegister","userRegister","className","type","id","value","onChange","r","target","defaultChecked","htmlFor","_Fragment","InputType","labelfor","labelText","inputType","p","n","o","h","a","w","Link","to","Spinner","Login","loading","useSelector","state","auth","React","src","alt","Form"],"sourceRoot":""}