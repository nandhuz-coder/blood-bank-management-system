{"version":3,"file":"static/js/39.4209ebd7.chunk.js","mappings":"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","sources":["components/shared/Layout/Header.js","pages/Dashboard/HospitalPage.js","components/shared/Layout/Sidebar.js","components/shared/Layout/Layout.js"],"sourcesContent":["import React from 'react';\r\nimport { BiDonateBlood, BiUserCircle } from 'react-icons/bi';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { logout } from '../../../redux/features/auth/authSlice';\r\n\r\nconst Header = () => {\r\n  const { user } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const CustomCloseButton = ({ closeToast }) => (\r\n    <div>\r\n      <button\r\n        className=\"btn btn-sm btn-danger me-2\"\r\n        onClick={() => {\r\n          confirmLogout(true); // Logout\r\n          closeToast(); // Close the toast\r\n        }}\r\n      >\r\n        Yes\r\n      </button>\r\n      <button className=\"btn btn-sm btn-secondary\" onClick={closeToast}>\r\n        No\r\n      </button>\r\n    </div>\r\n  );\r\n  const handleLogout = () => {\r\n    toast.warn(\"Are you sure you want to logout?\", {\r\n      position: \"top-center\",\r\n      autoClose: false,\r\n      closeOnClick: false,\r\n      draggable: false,\r\n      closeButton: (props) => <CustomCloseButton {...props} />,\r\n    });\r\n  };\r\n\r\n\r\n  const confirmLogout = (confirm) => {\r\n    if (confirm) {\r\n      dispatch(logout());\r\n      toast.success(\"Logged out successfully!\");\r\n      navigate(\"/login\");\r\n    } else {\r\n      toast.dismiss();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-light bg-light shadow-sm p-2'>\r\n      <div className='container-fluid d-flex justify-content-between align-items-center'>\r\n        <div className='navbar-brand d-flex align-items-center'>\r\n          <BiDonateBlood color='red' size={28} className=\"me-2\" />\r\n          <span className=\"fw-bold\">Blood Bank App</span>\r\n        </div>\r\n\r\n        <ul className='navbar-nav d-flex align-items-center'>\r\n          <li className='nav-item mx-3'>\r\n            <span className='nav-link d-flex align-items-center'>\r\n              <BiUserCircle size={22} className=\"me-1\" />\r\n              {user?.name || user?.hospitalName} &nbsp;\r\n              <span className=\"badge bg-secondary\">{user?.role}</span>\r\n            </span>\r\n          </li>\r\n\r\n          {\r\n            <li className='nav-item mx-3'>\r\n              <Link to=\"/\" className='nav-link'>Home</Link>\r\n            </li>\r\n          }\r\n\r\n          <li className='nav-item mx-3'>\r\n            <button className='btn btn-danger' onClick={handleLogout}>Logout</button>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/shared/Layout/Layout\";\r\nimport API from \"../../services/API\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst HospitalPage = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    bloodGroup: \"\",\r\n    units: \"1\",\r\n  });\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [filterBloodGroup, setFilterBloodGroup] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchDonorRequests();\r\n  }, []);\r\n\r\n  const fetchDonorRequests = async () => {\r\n    try {\r\n      const response = await API.get(\"/inventory/donor-list\");\r\n      setPendingRequests(response.data?.requestData || []);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"An error occurred while fetching donor requests\");\r\n      setPendingRequests([]);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await API.post(\"/inventory/requests/create-request\", {\r\n        ...formData,\r\n        hospitalId: user?._id,\r\n      });\r\n      toast.success(\"Request submitted successfully\");\r\n      setPendingRequests(response.data.data);\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"An error occurred while submitting the request\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteRequest = async (requestId) => {\r\n    try {\r\n      await API.delete(`/inventory/requests/delete-request/${requestId}`);\r\n      toast.success(\"Request deleted successfully\");\r\n      setPendingRequests(pendingRequests.filter((request) => request._id !== requestId));\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"An error occurred while deleting the request\");\r\n    }\r\n  };\r\n\r\n  const handleAcceptDonor = async (donorId, requestId) => {\r\n    try {\r\n      const res = await API.post(\"/inventory/accept-donor\", {\r\n        requestId, // ✅ Ensure this matches request `_id`\r\n        donorId, // ✅ Ensure this matches donor's user `_id`\r\n        action: \"waiting\"\r\n      });\r\n\r\n      if (res.data.success) {\r\n        toast.success(\"Donor accepted successfully\");\r\n        fetchDonorRequests();\r\n      } else {\r\n        toast.info(\"Can't accept donor\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"An error occurred while accepting the donor\");\r\n    }\r\n  };\r\n\r\n  const handleRejectDonor = async (donorId, requestId) => {\r\n    try {\r\n      const res = await API.post(\"/inventory/accept-donor\", {\r\n        requestId, // ✅ Ensure this matches request `_id`\r\n        donorId, // ✅ Ensure this matches donor's user `_id`\r\n        action: \"rejected\"\r\n      });\r\n\r\n      if (res.data.success) {\r\n        toast.warn(\"Donor Rejected successfully\");\r\n        fetchDonorRequests();\r\n      } else {\r\n        toast.info(\"Can't accept donor\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"An error occurred while accepting the donor\");\r\n    }\r\n  };\r\n\r\n\r\n  const approvedonor = async (donorId, requestId) => {\r\n    try {\r\n      const res = await API.post(\"/inventory/accept-donor\", {\r\n        requestId, // ✅ Ensure this matches request `_id`\r\n        donorId, // ✅ Ensure this matches donor's user `_id`\r\n        action: \"accepted\"\r\n      });\r\n\r\n      if (res.data.success) {\r\n        toast.warn(\"certificate generated successfully\");\r\n        fetchDonorRequests();\r\n      } else {\r\n        toast.info(\"Can't generate\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"An error occurred while accepting the donor\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"container mt-4\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <h1>Welcome, <span className=\"text-success\">{user?.hospitalName}</span></h1>\r\n          <button className=\"btn btn-primary\" onClick={() => setShowModal(true)}>Request Blood</button>\r\n        </div>\r\n        <h3 className=\"mt-3\">Blood Consumer Dashboard</h3>\r\n        <hr />\r\n\r\n        {/* Pending Requests */}\r\n        <h4 className=\"mt-4 text-center\">Pending Requests</h4>\r\n        <div className=\"table-responsive\">\r\n          {pendingRequests.length === 0 ? (\r\n            <p>No pending requests</p>\r\n          ) : (\r\n            <table className=\"table table-bordered mt-3\">\r\n              <thead className=\"table-dark\">\r\n                <tr>\r\n                  <th>Blood Group</th>\r\n                  <th>Units</th>\r\n                  <th>Interested Donors</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {pendingRequests.map((request) => (\r\n                  <tr key={request._id}>\r\n                    <td>{request.bloodGroup}</td>\r\n                    <td>{request.units}</td>\r\n                    <td>{request.donors?.length || 0}</td>\r\n                    <td>\r\n                      <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteRequest(request._id)}>\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n\r\n        {/* Interested Donors Table */}\r\n        <h4 className=\"mt-4\">Interested Donors</h4>\r\n        <div className=\"form-group mb-3\">\r\n          <label htmlFor=\"filterBloodGroup\"><strong>Filter by Blood Group:</strong></label>\r\n          <select\r\n            className=\"form-control w-25\"\r\n            id=\"filterBloodGroup\"\r\n            value={filterBloodGroup}\r\n            onChange={(e) => setFilterBloodGroup(e.target.value)}\r\n          >\r\n            <option value=\"\">All</option>\r\n            <option value=\"A+\">A+</option>\r\n            <option value=\"A-\">A-</option>\r\n            <option value=\"B+\">B+</option>\r\n            <option value=\"B-\">B-</option>\r\n            <option value=\"AB+\">AB+</option>\r\n            <option value=\"AB-\">AB-</option>\r\n            <option value=\"O+\">O+</option>\r\n            <option value=\"O-\">O-</option>\r\n          </select>\r\n        </div>\r\n\r\n        {pendingRequests.some(request => request.donors && request.donors.length > 0) ? (\r\n          <table className=\"table table-striped\">\r\n            <thead className=\"table-success\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Blood Group</th>\r\n                <th>Phone</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pendingRequests\r\n                .flatMap(req => req.donors || [])\r\n                .filter(donor => filterBloodGroup === \"\" || donor.bloodGroup === filterBloodGroup)\r\n                .map((donor, index) => (\r\n                  <tr key={index}>\r\n                    <td>{donor.name}</td>\r\n                    <td>{donor.bloodGroup}</td>\r\n                    <td>{donor.phone}</td>\r\n                    <td>\r\n                      {donor.action === \"pending\" ? (\r\n                        <>\r\n                          <button className=\"btn btn-success btn-sm\" onClick={() => handleAcceptDonor(donor.id, donor.requestId)}>\r\n                            Accept\r\n                          </button>\r\n                          <button className=\"btn btn-danger btn-sm ml-2\" onClick={() => handleRejectDonor(donor.id, donor.requestId)}>\r\n                            Reject\r\n                          </button>\r\n                        </>\r\n                      ) : donor.action === \"waiting\" ? (\r\n                        <button className=\"btn btn-info btn-sm\" onClick={() => approvedonor(donor.id, donor.requestId)} >\r\n                          approve Certificate\r\n                        </button>\r\n                      ) : donor.action === \"rejected\" ? (\r\n                        <button className=\"btn btn-danger disabled btn-sm\">\r\n                          Rejected\r\n                        </button>\r\n                      ) : (\r\n                        <button className=\"btn btn-secondary disabled btn-sm\">\r\n                          Donated\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No donors found</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Blood Request Modal */}\r\n      {showModal && (\r\n        <div className=\"modal show d-block\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Request Blood</h5>\r\n                <button type=\"button\" className=\"close btn btn-danger\" onClick={() => setShowModal(false)}>\r\n                  &times;\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label>Blood Group</label>\r\n                    <select className=\"form-control\" name=\"bloodGroup\" value={formData.bloodGroup} onChange={handleInputChange} required>\r\n                      <option value=\"\">Select Blood Group</option>\r\n                      <option value=\"A+\">A+</option>\r\n                      <option value=\"A-\">A-</option>\r\n                      <option value=\"B+\">B+</option>\r\n                      <option value=\"B-\">B-</option>\r\n                      <option value=\"AB+\">AB+</option>\r\n                      <option value=\"AB-\">AB-</option>\r\n                      <option value=\"O+\">O+</option>\r\n                      <option value=\"O-\">O-</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Units</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      name=\"units\"\r\n                      value={formData.units}\r\n                      onChange={handleInputChange}\r\n                      min=\"1\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Request</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HospitalPage;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport \"../../../Styles/Layout.css\";\r\n\r\nconst Sidebar = () => {\r\n  const location = useLocation();\r\n  const { user } = useSelector(state => state.auth);\r\n\r\n  // Sidebar menu based on user roles\r\n  const sidebarMenu = {\r\n    donor: [\r\n      { path: \"/donation\", name: \"Donation\", icon: \"fa-solid fa-hand-holding-medical\" },\r\n    ],\r\n    hospital: [\r\n      { path: \"/consumer\", name: \"Consumer\", icon: \"fa-solid fa-hospital\" },\r\n    ],\r\n    admin: [\r\n      { path: \"/donor-list\", name: \"Donor List\", icon: \"fa-solid fa-hand-holding-medical\" },\r\n      { path: \"/hospital-list\", name: \"Hospital List\", icon: \"fa-solid fa-hospital\" },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"menu\">\r\n        {(sidebarMenu[user?.role] || []).map((item) => (\r\n          <div\r\n            key={item.path}\r\n            className={`menu-item ${location.pathname === item.path ? \"active\" : \"\"}`}\r\n          >\r\n            <i className={item.icon}></i>\r\n            <Link to={item.path}>{item.name}</Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n      <div className=\"header fixed-top shadow-sm bg-light\">\r\n        <Header />\r\n      </div>\r\n\r\n      {/* Sidebar + Main Content */}\r\n      <div className=\"d-flex\">\r\n        {/* Sidebar */}\r\n        <div className=\"sidebar\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"content col-md-9\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["Header","user","useSelector","state","auth","dispatch","useDispatch","navigate","useNavigate","CustomCloseButton","_ref","closeToast","_jsxs","children","_jsx","className","onClick","confirmLogout","confirm","logout","toast","success","dismiss","BiDonateBlood","color","size","BiUserCircle","name","hospitalName","role","Link","to","handleLogout","warn","position","autoClose","closeOnClick","draggable","closeButton","props","HospitalPage","showModal","setShowModal","useState","formData","setFormData","bloodGroup","units","pendingRequests","setPendingRequests","filterBloodGroup","setFilterBloodGroup","useEffect","fetchDonorRequests","async","_response$data","response","API","get","data","requestData","error","console","handleInputChange","e","value","target","Layout","length","map","request","_request$donors","donors","delete","requestId","filter","_id","handleDeleteRequest","htmlFor","id","onChange","some","flatMap","req","donor","index","phone","action","_Fragment","donorId","post","info","handleAcceptDonor","handleRejectDonor","approvedonor","type","onSubmit","preventDefault","hospitalId","required","min","Sidebar","location","useLocation","path","icon","hospital","admin","item","pathname"],"sourceRoot":""}