{"version":3,"file":"static/js/651.ccaf0943.chunk.js","mappings":"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","sources":["components/shared/Layout/Header.js","pages/Dashboard/Analytics.js"],"sourcesContent":["import React from 'react';\r\nimport { BiDonateBlood, BiUserCircle } from 'react-icons/bi';\r\nimport { useSelector } from \"react-redux\"\r\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\r\n\r\nimport { toast } from 'react-toastify';\r\nconst Header = () => {\r\n  const { user } = useSelector(state => state.auth);\r\n  //logout handler\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const handleLogout = () => {\r\n    let answer = window.prompt(\"Are you sure you want to Logout?\", \"Sure\");\r\n    if (!answer)\r\n      return;\r\n    localStorage.clear();\r\n    toast.success(\"Logout Successfully\");\r\n    navigate(\"/login\");\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <nav className='navbar '>\r\n        <div className='container-fluid'>\r\n          <div className='navbar-brand'><BiDonateBlood color='red' /> Blood Bank App</div>\r\n          <ul className='navbar-nav flex-row'>\r\n            <li className='nav-item mx-3'>\r\n              <p className='nav-link'>\r\n                <BiUserCircle /> {user?.name || user?.hospitalName || user?.organisationName} {\" \"} &nbsp;\r\n                <span class=\"badge bg-secondary\">{user?.role}</span>\r\n              </p>\r\n            </li>\r\n            {(user?.role === \"organisation\") && (location.pathname === \"/\" || location.pathname === \"/donor\" || location.pathname === \"/hospital\") ? (\r\n              <li className='nav-item mx-3 mt-2'>\r\n                <Link to=\"/analytics\" className='nav-link'>Analytics</Link>\r\n              </li>\r\n            ) : (<li className='nav-item mx-3 mt-2'>\r\n              <Link to=\"/\" className='nav-link'>Home</Link>\r\n            </li>)}\r\n            <li className='nav-item mx-3 '>\r\n              <button className='btn btn-danger' onClick={handleLogout}>Logout</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../components/shared/Layout/Header\";\r\nimport API from \"./../../services/API\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst Analytics = () => {\r\n  const [data, setData] = useState([]);\r\n  const colors = [\"#A0BFE0\", \"#7895CB\", \"#F2EAD3\", \"#A2CDB0\", \"#FF8551\", \"#FFDEDE\", \"#A2FF86\", \"#E1ECC8\"];\r\n  const [inventoryData, setInventoryData] = useState([]);\r\n  //GET BLOOD GROUP DATA\r\n  const getBloodGroupData = async () => {\r\n    try {\r\n      const { data } = await API.get(\"/analytics/bloodGroups-data\");\r\n      if (data?.success) {\r\n        setData(data?.bloodGroupData);\r\n        // console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //lifrecycle method\r\n  useEffect(() => {\r\n    getBloodGroupData();\r\n  }, []);\r\n\r\n  const getBloodRecords = async () => {\r\n    try {\r\n      const { data } = await API.get(\"/inventory/get-recent-inventory\");\r\n      if (data?.success) {\r\n        setInventoryData(data?.inventory);\r\n        // console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBloodRecords();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"d-flex flex-row flex-wrap\">\r\n        {data?.map((record, i) => (\r\n          <div className=\"card m-4 p-1\"\r\n            key={i}\r\n            style={{ width: \"20rem\", backgroundColor: `${colors[i]}` }}>\r\n            <div className=\"card-body\">\r\n              <h1 className=\"card-title bg-light text-dark text-center\">{record.bloodGroup}</h1>\r\n              <p className=\"card-text\">\r\n                Total In: <b>{record.totalIn}</b> (ML)\r\n              </p>\r\n              <p className=\"card-text\">\r\n                Total Out: <b>{record.totalOut}</b> (ML)\r\n              </p>\r\n            </div>\r\n            <div className=\"card-footer text-light bg-dark text-center\">\r\n              Total available:<b>{record.availableBlood}</b> (ML)\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"container mt-3\">\r\n        <h1 className=\"my-3\">Recent Blood Transactions</h1>\r\n        <table className=\"table  \">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Blood Group</th>\r\n              <th scope=\"col\">Inventory Type</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Date & Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {inventoryData?.map((record) => (\r\n              <tr key={record._id}>\r\n                <td>{record.bloodGroup}</td>\r\n                <td>{record.inventoryType}</td>\r\n                <td>{record.quantity} (ML)</td>\r\n                <td>{record.email}</td>\r\n                <td>\r\n                  {moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"names":["Header","user","useSelector","state","auth","navigate","useNavigate","location","useLocation","_jsx","_Fragment","children","className","_jsxs","BiDonateBlood","color","BiUserCircle","name","hospitalName","organisationName","class","role","pathname","Link","to","onClick","handleLogout","window","prompt","localStorage","clear","toast","success","Analytics","data","setData","useState","colors","inventoryData","setInventoryData","useEffect","async","API","get","bloodGroupData","error","console","log","getBloodGroupData","inventory","getBloodRecords","map","record","i","style","width","backgroundColor","bloodGroup","totalIn","totalOut","availableBlood","scope","inventoryType","quantity","email","moment","createdAt","format","_id"],"sourceRoot":""}