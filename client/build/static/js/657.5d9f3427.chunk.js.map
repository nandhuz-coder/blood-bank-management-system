{"version":3,"file":"static/js/657.5d9f3427.chunk.js","mappings":"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","sources":["components/shared/Layout/Header.js","components/shared/Spinner.js","components/shared/Modals/Modal.js","pages/HomePage.js","components/shared/Form/InputType.js","components/shared/Layout/Sidebar.js","components/shared/Layout/Layout.js"],"sourcesContent":["import React from 'react';\r\nimport { BiDonateBlood, BiUserCircle } from 'react-icons/bi';\r\nimport { useSelector } from \"react-redux\"\r\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\r\n\r\nimport { toast } from 'react-toastify';\r\nconst Header = () => {\r\n  const { user } = useSelector(state => state.auth);\r\n  //logout handler\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const handleLogout = () => {\r\n    let answer = window.prompt(\"Are you sure you want to Logout?\", \"Sure\");\r\n    if (!answer)\r\n      return;\r\n    localStorage.clear();\r\n    toast.success(\"Logout Successfully\");\r\n    navigate(\"/login\");\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <nav className='navbar '>\r\n        <div className='container-fluid'>\r\n          <div className='navbar-brand'><BiDonateBlood color='red' /> Blood Bank App</div>\r\n          <ul className='navbar-nav flex-row'>\r\n            <li className='nav-item mx-3'>\r\n              <p className='nav-link'>\r\n                <BiUserCircle /> {user?.name || user?.hospitalName || user?.organisationName} {\" \"} &nbsp;\r\n                <span class=\"badge bg-secondary\">{user?.role}</span>\r\n              </p>\r\n            </li>\r\n            {(user?.role === \"organisation\") && (location.pathname === \"/\" || location.pathname === \"/donor\" || location.pathname === \"/hospital\") ? (\r\n              <li className='nav-item mx-3 mt-2'>\r\n                <Link to=\"/analytics\" className='nav-link'>Analytics</Link>\r\n              </li>\r\n            ) : (<li className='nav-item mx-3 mt-2'>\r\n              <Link to=\"/\" className='nav-link'>Home</Link>\r\n            </li>)}\r\n            <li className='nav-item mx-3 '>\r\n              <button className='btn btn-danger' onClick={handleLogout}>Logout</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className='loader-container'>\r\n      <div className='loader'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport InputType from \"./../Form/InputType\";\r\nimport API from \"./../../../services/API\";\r\nimport { toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nconst Modal = () => {\r\n  const [inventoryType, setInventoryType] = useState(\"in\");\r\n  const [bloodGroup, setBloodGroup] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [email, setEmail] = useState(\"\");\r\n  const { user } = useSelector(state => state.auth);\r\n  const handleModalSubmit = async () => {\r\n    try {\r\n      if (!bloodGroup || !quantity) {\r\n        return toast.error(\"Please Provide all fields\");\r\n      }\r\n      const { data } = await API.post(\"/inventory/create-inventory\", {\r\n        email,\r\n        organisation: user?._id,\r\n        inventoryType,\r\n        bloodGroup,\r\n        quantity\r\n      });\r\n      if (data?.success) {\r\n        toast.success(\"New Record Created\");\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response.data.message);\r\n      console.log(error);\r\n      window.location.reload();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {/* Modal */}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"staticBackdrop\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        tabIndex={-1}\r\n        aria-labelledby=\"staticBackdropLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h1 className=\"modal-title fs-5\" id=\"staticBackdropLabel\">\r\n                Manage Blood Record\r\n              </h1>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"d-flex mb-3\">\r\n                Blood Type: &nbsp;\r\n                <div className=\"form-check ms-3\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"inRadio\"\r\n                    defaultChecked\r\n                    value={\"in\"}\r\n                    onChange={(e) => setInventoryType(e.target.value)}\r\n                    className=\"form-check-input\"\r\n                  />\r\n                  <label htmlFor=\"in\" className=\"form-check-label\">\r\n                    IN\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-check ms-3\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"inRadio\"\r\n                    value={\"out\"}\r\n                    onChange={(e) => setInventoryType(e.target.value)}\r\n                    className=\"form-check-input\"\r\n                  />\r\n                  <label htmlFor=\"out\" className=\"form-check-label\">\r\n                    OUT\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <select\r\n                className=\"form-select\"\r\n                aria-label=\"Default select example\"\r\n                onChange={(e) => setBloodGroup(e.target.value)}\r\n              >\r\n                <option defaultValue={\"Open this select menu\"}>\r\n                  Open this select menu\r\n                </option>\r\n                <option value={\"O+\"}>O+</option>\r\n                <option value={\"O-\"}>O-</option>\r\n                <option value={\"AB+\"}>AB+</option>\r\n                <option value={\"AB-\"}>AB-</option>\r\n                <option value={\"A+\"}>A+</option>\r\n                <option value={\"A-\"}>A-</option>\r\n                <option value={\"B+\"}>B+</option>\r\n                <option value={\"B-\"}>B-</option>\r\n              </select>\r\n              <InputType\r\n                labelText={inventoryType === \"in\" ? \"Donor Email\" : \"Hospital Email\"}\r\n                labelFor={\"donorEmail\"}\r\n                inputType={\"email\"}\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <InputType\r\n                labelText={\"Quanitity (ML)\"}\r\n                labelFor={\"quantity\"}\r\n                inputType={\"Number\"}\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={handleModalSubmit}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Spinner from \"../components/shared/Spinner\";\r\nimport Layout from \"../components/shared/Layout/Layout\";\r\nimport Modal from \"../components/shared/Modals/Modal\";\r\nimport API from \"../services/API\";\r\nimport moment from \"moment\";\r\n\r\nconst HomePage = () => {\r\n  const { loading, error, user } = useSelector((state) => state.auth);\r\n  const [data, setData] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  //get function\r\n  const getBloodRecords = async () => {\r\n    try {\r\n      const { data } = await API.get(\"/inventory/get-inventory\");\r\n      if (data?.success) {\r\n        setData(data?.inventory);\r\n        // console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBloodRecords();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <Layout>\r\n      {user?.role === \"admin\" && navigate(\"/admin\")}\r\n      {user?.role === \"donor\" && navigate(\"/donor-page\")}\r\n      {user?.role === \"hospital\" && navigate(\"/hospital-page\")}\r\n\r\n      <ToastContainer />\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <div className=\"container\">\r\n            <h4\r\n              className=\"ms-4\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#staticBackdrop\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <i className=\"fa-solid fa-plus text-success py-4\"></i>\r\n              Add Inventory\r\n            </h4>\r\n            <table className=\"table \">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Blood Group</th>\r\n                  <th scope=\"col\">Inventory Type</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Date & Time</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data?.map((record) => (\r\n                  <tr key={record._id}>\r\n                    <td>{record.bloodGroup}</td>\r\n                    <td>{record.inventoryType}</td>\r\n                    <td>{record.quantity} (ML)</td>\r\n                    <td>{record.email}</td>\r\n                    <td>\r\n                      {moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <Modal />\r\n          </div>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\nconst InputType = ({\r\n  labelfor,\r\n  labelText,\r\n  value,\r\n  onChange,\r\n  name,\r\n  inputType,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"mb-1\">\r\n        <label htmlFor={labelfor} className=\"form-label\">\r\n          {labelText}\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          type={inputType}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputType;\r\n","import React from 'react';\r\n//import { userMenu } from './Menus/userMenu';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport \"../../../Styles/Layout.css\";\r\n\r\nconst Sidebar = () => {\r\n  const location = useLocation();\r\n  const { user } = useSelector(state => state.auth);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='sidebar'>\r\n        <div className='menu'>\r\n\r\n          { /*userMenu.map((menu)=>{\r\n                const isActive=location.pathname===menu.path;\r\n                return (\r\n                    <div className={`menu-item ${isActive && \"active\"}`\r\n                    } key={menu.name}>\r\n                    <i className={menu.icon}></i>\r\n                    <Link to={menu.path}>{menu.name}</Link>\r\n                    </div>\r\n                )\r\n            })*/}\r\n          {user?.role === \"organisation\" && (\r\n            <>\r\n              <div className={`menu-item ${location.pathname === \"/\" && \"active\"}`\r\n              } >\r\n                <i className=\"fa-solid fa-warehouse\"></i>\r\n                <Link to=\"/\">Inventory</Link>\r\n              </div>\r\n\r\n              <div className={`menu-item ${location.pathname === \"/donor\" && \"active\"}`\r\n              }>\r\n                <i className=\"fa-solid fa-hand-holding-medical\"></i>\r\n                <Link to=\"/donor\">Donor</Link>\r\n              </div>\r\n\r\n              <div className={`menu-item ${location.pathname === \"/hospital\" && \"active\"}`\r\n              }>\r\n                <i className=\"fa-solid fa-hospital\"></i>\r\n                <Link to=\"/hospital\">Hospital</Link>\r\n              </div>\r\n            </>\r\n\r\n          )}\r\n          {(user?.role === \"donor\" || user?.role === \"hospital\") && (\r\n            <div className={`menu-item ${location.pathname === \"/organisation\" && \"active\"}`\r\n            }>\r\n              <i className=\"fa-sharp fa-solid fa-building-ngo\"></i>\r\n              <Link to=\"/organisation\">Organisation</Link>\r\n            </div>\r\n          )}\r\n\r\n          {(user?.role === \"hospital\") && (\r\n            <div className={`menu-item ${location.pathname === \"/consumer\" && \"active\"}`\r\n            }>\r\n              <i className=\" fa-solid fa-hospital\"></i>\r\n              <Link to=\"/consumer\">Consumer</Link>\r\n            </div>\r\n          )}\r\n\r\n          {(user?.role === \"donor\") && (\r\n            <div className={`menu-item ${location.pathname === \"/donation\" && \"active\"}`\r\n            }>\r\n              <i className=\" fa-solid fa-hand-holding-medical\"></i>\r\n              <Link to=\"/donation\">Donation</Link>\r\n            </div>\r\n          )}\r\n\r\n          {user?.role === \"admin\" && (\r\n            <>\r\n              <div className={`menu-item ${location.pathname === \"/donor-list\" && \"active\"}`\r\n              } >\r\n                <i className=\"fa-solid fa-hand-holding-medical\"></i>\r\n                <Link to=\"/donor-list\">Donor List</Link>\r\n              </div>\r\n\r\n              <div className={`menu-item ${location.pathname === \"/hospital-list\" && \"active\"}`\r\n              }>\r\n                <i className=\"fa-solid fa-hospital\"></i>\r\n                <Link to=\"/hospital-list\">Hospital List</Link>\r\n              </div>\r\n\r\n              <div className={`menu-item ${location.pathname === \"/org-list\" && \"active\"}`\r\n              }>\r\n                <i className=\"fa-sharp fa-solid fa-building-ngo\"></i>\r\n                <Link to=\"/org-list\">Organisation List</Link>\r\n              </div>\r\n            </>\r\n\r\n          )}\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <div className='header'><Header /></div>\r\n      <div className='row g-0'>\r\n        <div className='col-md-3'>\r\n          <Sidebar />\r\n        </div>\r\n        <div className='col-md-9'>{children}</div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"names":["Header","user","useSelector","state","auth","navigate","useNavigate","location","useLocation","_jsx","_Fragment","children","className","_jsxs","BiDonateBlood","color","BiUserCircle","name","hospitalName","organisationName","class","role","pathname","Link","to","onClick","handleLogout","window","prompt","localStorage","clear","toast","success","Spinner","configure","Modal","inventoryType","setInventoryType","useState","bloodGroup","setBloodGroup","quantity","setQuantity","email","setEmail","id","tabIndex","type","defaultChecked","value","onChange","e","target","htmlFor","defaultValue","InputType","labelText","labelFor","inputType","async","error","data","API","post","organisation","_id","reload","response","message","console","log","HomePage","loading","setData","useEffect","get","inventory","getBloodRecords","Layout","ToastContainer","style","cursor","scope","map","record","moment","createdAt","format","_ref","labelfor","Sidebar"],"sourceRoot":""}