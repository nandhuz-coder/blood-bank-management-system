{"version":3,"file":"static/js/965.f35a5219.chunk.js","mappings":"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","sources":["components/shared/Layout/Header.js","pages/Donation.js","components/shared/Layout/Sidebar.js","components/shared/Layout/Layout.js"],"sourcesContent":["import React from 'react';\r\nimport { BiDonateBlood, BiUserCircle } from 'react-icons/bi';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { logout } from '../../../redux/features/auth/authSlice';\r\n\r\nconst Header = () => {\r\n  const { user } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const CustomCloseButton = ({ closeToast }) => (\r\n    <div>\r\n      <button\r\n        className=\"btn btn-sm btn-danger me-2\"\r\n        onClick={() => {\r\n          confirmLogout(true); // Logout\r\n          closeToast(); // Close the toast\r\n        }}\r\n      >\r\n        Yes\r\n      </button>\r\n      <button className=\"btn btn-sm btn-secondary\" onClick={closeToast}>\r\n        No\r\n      </button>\r\n    </div>\r\n  );\r\n  const handleLogout = () => {\r\n    toast.warn(\"Are you sure you want to logout?\", {\r\n      position: \"top-center\",\r\n      autoClose: false,\r\n      closeOnClick: false,\r\n      draggable: false,\r\n      closeButton: (props) => <CustomCloseButton {...props} />,\r\n    });\r\n  };\r\n\r\n\r\n  const confirmLogout = (confirm) => {\r\n    if (confirm) {\r\n      dispatch(logout());\r\n      toast.success(\"Logged out successfully!\");\r\n      navigate(\"/login\");\r\n    } else {\r\n      toast.dismiss();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-light bg-light shadow-sm p-2'>\r\n      <div className='container-fluid d-flex justify-content-between align-items-center'>\r\n        <div className='navbar-brand d-flex align-items-center'>\r\n          <BiDonateBlood color='red' size={28} className=\"me-2\" />\r\n          <span className=\"fw-bold\">Blood Bank App</span>\r\n        </div>\r\n\r\n        <ul className='navbar-nav d-flex align-items-center'>\r\n          <li className='nav-item mx-3'>\r\n            <span className='nav-link d-flex align-items-center'>\r\n              <BiUserCircle size={22} className=\"me-1\" />\r\n              {user?.name || user?.hospitalName} &nbsp;\r\n              <span className=\"badge bg-secondary\">{user?.role}</span>\r\n            </span>\r\n          </li>\r\n\r\n          {\r\n            <li className='nav-item mx-3'>\r\n              <Link to=\"/\" className='nav-link'>Home</Link>\r\n            </li>\r\n          }\r\n\r\n          <li className='nav-item mx-3'>\r\n            <button className='btn btn-danger' onClick={handleLogout}>Logout</button>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Layout from \"../components/shared/Layout/Layout\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport API from \"../services/API\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Donation = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [data, setData] = useState([]);\r\n\r\n  // ✅ Wrap `getDonors` in `useCallback` to prevent re-creation\r\n  const getDonors = useCallback(async () => {\r\n    if (!user?._id) return; // Prevent API call if user is null/undefined\r\n    try {\r\n      const { data } = await API.get(\"/inventory/user/get-requests\");\r\n      if (data?.data) {\r\n        setData(data?.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [user?._id]);\r\n\r\n\r\n  const postIntrested = async (data) => {\r\n    await API.post(\"/inventory/user/intrested\", {\r\n      id: data\r\n    }).then((res) => {\r\n      if (res?.data?.success) {\r\n        toast.success(\"Shown intrest in donating...\");\r\n        getDonors()\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDonors();\r\n  }, [getDonors]); // ✅ Now it follows React Hook rules\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"container mt-4\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Blood Group</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Hospital Name</th>\r\n              <th scope=\"col\">Location</th>\r\n              <th scope=\"col\">Date & Time</th>\r\n              <th scope=\"col\">action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((record) => (\r\n              <tr key={record._id}>\r\n                <td>{record.bloodGroup}</td>\r\n                <td>{record.units}</td>\r\n                <td>{record.hospitalId.hospitalName}</td>\r\n                <td>{record.hospitalId.address}</td>\r\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\r\n                <td>\r\n                  {record.intrested === false ?\r\n                    <button className=\"btn btn-primary btn-sm\" onClick={() => postIntrested(record._id)}>\r\n                      Interested\r\n                    </button> :\r\n                    <button className=\"btn btn-secondary disabled btn-sm\">\r\n                      requested\r\n                    </button>\r\n                  }\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Donation;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport \"../../../Styles/Layout.css\";\r\n\r\nconst Sidebar = () => {\r\n  const location = useLocation();\r\n  const { user } = useSelector(state => state.auth);\r\n\r\n  // Sidebar menu based on user roles\r\n  const sidebarMenu = {\r\n    donor: [\r\n      { path: \"/donation\", name: \"Donation\", icon: \"fa-solid fa-hand-holding-medical\" },\r\n    ],\r\n    hospital: [\r\n      { path: \"/consumer\", name: \"Consumer\", icon: \"fa-solid fa-hospital\" },\r\n    ],\r\n    admin: [\r\n      { path: \"/donor-list\", name: \"Donor List\", icon: \"fa-solid fa-hand-holding-medical\" },\r\n      { path: \"/hospital-list\", name: \"Hospital List\", icon: \"fa-solid fa-hospital\" },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"menu\">\r\n        {(sidebarMenu[user?.role] || []).map((item) => (\r\n          <div\r\n            key={item.path}\r\n            className={`menu-item ${location.pathname === item.path ? \"active\" : \"\"}`}\r\n          >\r\n            <i className={item.icon}></i>\r\n            <Link to={item.path}>{item.name}</Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n      <div className=\"header fixed-top shadow-sm bg-light\">\r\n        <Header />\r\n      </div>\r\n\r\n      {/* Sidebar + Main Content */}\r\n      <div className=\"d-flex\">\r\n        {/* Sidebar */}\r\n        <div className=\"sidebar\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"content col-md-9\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["Header","user","useSelector","state","auth","dispatch","useDispatch","navigate","useNavigate","CustomCloseButton","_ref","closeToast","_jsxs","children","_jsx","className","onClick","confirmLogout","confirm","logout","toast","success","dismiss","BiDonateBlood","color","size","BiUserCircle","name","hospitalName","role","Link","to","handleLogout","warn","position","autoClose","closeOnClick","draggable","closeButton","props","Donation","data","setData","useState","getDonors","useCallback","async","_id","API","get","error","console","useEffect","Layout","scope","map","record","bloodGroup","units","hospitalId","address","moment","createdAt","format","intrested","post","id","then","res","_res$data","postIntrested","Sidebar","location","useLocation","donor","path","icon","hospital","admin","item","pathname","_Fragment"],"sourceRoot":""}